#import "/template.typ": report

#show: report.with(
  title: "lab01-网络相关进程与服务实验",
  date: "2024 年 2 月 26 日"
)

= 实验目的

+ 理解计算机进程和服务的基本概念
+ 学习使用任务管理器查看进程的相关信息
+ 掌握如何使用命令行与图形界面启动和终止进程

= 实验原理

- 进程：一个程序在计算机中的执行过程。它占有一定的内存空间、执行时间以及其他系统资源；
- 网络进程：与一般进程具有基本相同的属性，但进程要开启一到多个传输端口号，用于接收或发送数据；
- 系统服务：主要是用于为内部进程服务而长期运行的一种特殊进行，无用户界面，也无需打印任何模拟输出。

通过 Windows 的任务管理器和下述命令，可以观察和操作上述概念：

- `tasklist` 命令：用于显示运行在本地或远程计算机上的所有任务和应用程序和服务列表，带有过程 TO，可以监控用户的操作；
- `taskkill` 命令：用于结束一个或多个任务或进程，可以根据进行 ID 或图像名来结束进程。

= 实验设备

- 实验硬件：济事楼 330 机房电脑与个人笔记本电脑
- 实验软件：Windows 操作系统及记事本、Word、写字板、画图、计算器五个应用程序

= 实验步骤

+ 启动并进入 Windows 环境；
+ 按下 `Ctrl + Alt + Del` 组合键，选择“任务管理器”；
+ 在任务管理器中，观察“应用程序”和“进程”选项卡；
+ 启动记事本、Word、写字板、画图、计算器等应用程序；
+ 使用任务管理器和命令行工具（`tasklist`、`taskkill`）查看和管理进程；
+ 通过命令 `services.msc` 查看系统服务；
+ 记录实验观测的结果、现象和数据。

= 实验现象

- 按下 `Ctrl + Alt + Del` 后可以打开任务管理器界面：

#image("01_01.png")

- 使用 `tasklist` 命令列出所有正在运行的进程：

#image("01_02.png")

- 通过 `taskkill` 命令成功结束了部分应用程序的进程。下图中通过 `taskkill /pid 4524` 成功关闭记事本应用：

#image("01_03.png")

- 对于计算器应用程序，使用 `taskkill /pid 9540` 后未能成功关闭，需要使用 `/f` 参数强制终止该进程：

#image("01_05.png")
#image("01_06.png")

- 通过命令 `services.msc` 可以查看所有的系统服务及其状态：

#image("01_04.png")

= 分析讨论

+ 简单解释进程与网络进程的含义
  - 进程：进程是计算机中正在运行的程序的实例，是计算机执行任务的基本单位。每个进程都有自己的内存空间和资源分配，它们在操作系统的控制下运行。一个操作系统可以同时运行多个进程，每个进程执行不同的任务。每个进程都有一个唯一的标识符，称为*进程 ID*（Process ID），用于操作系统的识别和管理。
  - 网络进程：网络进程通常是指运行在计算机网络上的进程或程序。这些进程通过网络协议进行通信，可以是客户端进程或服务器进程。与一般进程不同的地方在于网络进程需要开启一个到多个传输端口号。一般而言，对于 C/S 或 B/S 架构的网络，客户端网络进程至少开启一个端口号，用于接收或发送数据。而服务器网络进程则至少开启两个端口号，一个用于接收客户端的数据，一个用于发送数据给客户端。

+ 任务管理器的启动和使用
  - 可以通过快捷键 `Ctrl+Alt+Del` 启动任务管理器；
  - 任务管理器提供了一个直观的图形化界面，允许用户查看和管理计算机上的进程和应用程序；

+ 显示有关服务的图形和命令方式
  - 图形方式：
    - 优点：
      + 提供了一个简单直观的界面以查看运行的进行和服务，以及它们的资源使用情况；
    - 缺点：
      + 功能有限，不能配合其他工具处理自动化任务；
  - 命令方式：
    - 优点：
      + 可以配合其他命令行工具或批处理脚本协同工作；
    - 缺点：
      + 需要一定的学习成本，需要时间熟悉使用；
      + 信息与数据呈现方式上以字符为主，形式较为单一受限，不够直观。

+ 图形和命令方式启动和停止有关进程
  - 图形方式：
    - 优点：
      + 可以方便地启动、停止或重新启动服务；
    - 缺点：
      + 功能有限，不能进行高级的服务配置；
      + 不适用于管理服务的详细属性。
  - 命令方式：
    - 优点：
      + 可以执行各种服务管理操作，包括启动、停止、修改配置等；
      + 可以通过批处理脚本或远程管理工具进行自动化和远程管理；
      + 可以提供详细的命令行输出，方便故障排除；
    - 缺点：
      + 使用命令行工具时需要记住一些命令及其参数，不够直观；
      + 上手存在门槛，需要一些时间来学习和使用。

